grammar JsonTemplate;
jsonRoot : annoSize? LCP property* RCP;
LCP : '{';
RCP : '}';
property : propName PROP_COLON propValue;
propName : ID;
PROP_COLON : ':';
propValue : type? PLAIN_VALUE | type? anno* | jsonRoot;
PLAIN_VALUE : [a-zA-Z0-9]+;
type : STRING_TYPE | CHAR_TYPE | INTEGER_TYPE | FLOAT_TYPE | BOOLEAN_TYPE;
STRING_TYPE : '%s';
CHAR_TYPE : '%c';
INTEGER_TYPE : '%d';
FLOAT_TYPE : '%f';
BOOLEAN_TYPE : '%b';
anno : annoSize | annoOther;
annoSize : ANNO_SIZE_TAG LP annoParams RP;
annoOther : ANNO_OTHER_TAG LP annoParams RP;
LP : '(';
RP : ')';
annoParams : singleParam | listParam | namedParam;
singleParam : ID;
listParam : ID COMMA ID+;
COMMA : ',';
namedParam : paramName EQ paramValue;
EQ : '=';
paramName : ID;
paramValue : ;
ANNO_SIZE_TAG : '@Size';
ANNO_OTHER_TAG : '@'[a-zA-Z][a-zA-Z0-9]*;
